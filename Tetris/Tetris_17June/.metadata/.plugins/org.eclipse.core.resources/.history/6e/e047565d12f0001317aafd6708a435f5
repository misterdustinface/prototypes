package com.retroactivegames.game;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.Input.Keys;

import devan.input.VirtualInput;
import devan.input.button.VirtualButtonPressedListener;
import devan.input.gdx.InputDriver;

public class RendererController {
	private InputDriver  inputDriver;
	private VirtualInput vInput;
	private TetrisWorld  world;
	
	public RendererController(TetrisWorld WORLD){
		world = WORLD;
		setPlayerControls();
	}
	
	private void setPlayerControls(){
		inputDriver = new InputDriver();
		vInput 		= new VirtualInput();
		vInput.initDriver(inputDriver);

		vInput.mapVKey("rotate counterclockwise", Keys.LEFT);
		vInput.mapVKey("rotate clockwise", Keys.RIGHT);
		vInput.mapVKey("shift up", Keys.W);
		vInput.mapVKey("shift down", Keys.S);
		vInput.mapVKey("shift left", Keys.A);
		vInput.mapVKey("shift right", Keys.D);		
		vInput.mapVKey("drop", Keys.DOWN);
		
		vInput.mapVKey("new", Keys.SPACE);

		vInput.addKeyPressed("new", new VirtualButtonPressedListener(){
			@Override
			public void keyPressed() {
				world.setCurrentFallingTetrino(new Tetrino(world.getWidth(), world.getHeight()));
			}
		});
		
		vInput.addKeyPressed("rotate counterclockwise", new VirtualButtonPressedListener(){
			@Override
			public void keyPressed() {
				world.rotateTetrinoCounterclockwise();
			}
		});
		vInput.addKeyPressed("rotate clockwise", new VirtualButtonPressedListener(){
			@Override
			public void keyPressed() {
				world.rotateTetrinoClockwise();
			}
		});
		
		vInput.addKeyPressed("shift left", new VirtualButtonPressedListener(){
			@Override
			public void keyPressed() {
				world.shiftTetrinoLeft();
			}
		});
		vInput.addKeyPressed("shift right", new VirtualButtonPressedListener(){
			@Override
			public void keyPressed() {
				world.shiftTetrinoRight();
			}
		});
		vInput.addKeyPressed("shift up", new VirtualButtonPressedListener(){
			@Override
			public void keyPressed() {
				world.shiftTetrinoUp();
			}
		});
		vInput.addKeyPressed("shift down", new VirtualButtonPressedListener(){
			@Override
			public void keyPressed() {
				world.shiftTetrinoDown();
			}
		});
		vInput.addKeyPressed("drop", new VirtualButtonPressedListener(){
			@Override
			public void keyPressed() {
				world.dropTetrinoDown();
			}
		});
		
		Gdx.input.setInputProcessor(inputDriver.getInputProcessor());
	}
}
